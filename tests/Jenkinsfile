pipeline {
    agent { 
        dockerfile {
            dir 'tests'
            filename 'Dockerfile'
            args '--network host'
        }
    }
    stages {
        stage('Unit Tests') {
            steps {
                dir('tests/unit/common/src') {
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_bad_fits.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_cutoutStore.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_date_nid.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_db_connect.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_logging.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_manage_status.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_objectStore.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_run_crossmatch.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_run_crossmatch_optimised.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_skymaps.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" context.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" settings.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_slack_webhook.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_topic_name.py'
                }
                dir('tests/unit/pipeline/ingest') {
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_ingest.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_ingest_runner.py'
                }
                dir('tests/unit/pipeline/sherlock') {
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_sherlock_wrapper.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_sherlock_runner.py'
                }
                dir('tests/unit/pipeline/filter') {
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_feature_groups.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_filter_core.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_filter_runner.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_watchlists.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_watchmaps.py'
                }
                dir('tests/unit/services/') {
                    sh 'coverage run -a --branch --data-file=../.coverage --omit="*/tests/*,*/dist-packages/*" test_annotations_dump.py'
                    sh 'coverage run -a --branch --data-file=../.coverage --omit="*/tests/*,*/dist-packages/*" test_check_expire.py'
                    sh 'coverage run -a --branch --data-file=../.coverage --omit="*/tests/*,*/dist-packages/*" test_crossmatch_tns_dump.py'
                    sh 'coverage run -a --branch --data-file=../.coverage --omit="*/tests/*,*/dist-packages/*" test_get_annotations.py'
                    sh 'coverage run -a --branch --data-file=../.coverage --omit="*/tests/*,*/dist-packages/*" test_get_crossmatch_tns.py'
                    sh 'coverage run -a --branch --data-file=../.coverage --omit="*/tests/*,*/dist-packages/*" test_make_area_files.py'
                    sh 'coverage run -a --branch --data-file=../.coverage --omit="*/tests/*,*/dist-packages/*" test_make_watchlist_files.py'
                    sh 'coverage run -a --branch --data-file=../.coverage --omit="*/tests/*,*/dist-packages/*" test_my_cmd.py'
                    sh 'coverage run -a --branch --data-file=../.coverage --omit="*/tests/*,*/dist-packages/*" test_mysql_backup.py'
                }
                dir('tests/unit/services/annotations/') {
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" kafka_test.py'
                }
                dir('tests/unit/services/externalBrokers/') {
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_alerce.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_fink.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_gw.py'
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_TNS.py'
                }
                dir('tests/unit/services/sherlock/') {
                    sh 'coverage run -a --branch --data-file=../../.coverage --omit="*/tests/*,*/dist-packages/*" test_sherlock.py'
                }
                dir('tests/unit/') {
                    sh 'coverage xml'
                }
            }
            post {
                always {
                    junit 'tests/unit/common/src/test-reports/*.xml'
                    junit 'tests/unit/pipeline/ingest/test-reports/*.xml'
                    junit 'tests/unit/pipeline/sherlock/test-reports/*.xml'
                    junit 'tests/unit/pipeline/filter/test-reports/*.xml'
                    // junit 'tests/unit/services/test-reports/*.xml'
                    junit 'tests/unit/services/annotations/test-reports/*.xml'
                    // junit 'tests/unit/services/externalBrokers/test-reports/*.xml'
                    junit 'tests/unit/services/sherlock/test-reports/*.xml'
                    recordCoverage(tools: [[parser: 'COBERTURA', pattern: 'tests/unit/coverage.xml']])
                }
            }
        }
        stage('Integration Tests') {
            steps {
                dir('tests/integration/example') {
                    sh 'python3 test_example.py'
                }
                dir('tests/integration/common/src') {
                    sh 'python3 test_cutoutStore.py'
                    sh 'python3 test_manage_status.py'
                }
                dir('tests/integration/pipeline/filter') {
                    sh 'python3 test_run_query.py'
                    sh 'python3 test_watchlist.py'
                }
                dir('tests/integration/pipeline/sherlock') {
                    sh 'python3 test_sherlock_wrapper.py'
                }
            }
            post {
                always {
                    junit 'tests/integration/common/src/test-reports/*.xml'
                    junit 'tests/integration/pipeline/sherlock/test-reports/*.xml'
                    junit 'tests/integration/pipeline/filter/test-reports/*.xml'
                }
            }
        }
    }
}
