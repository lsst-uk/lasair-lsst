- name: Install apt packages
  become: true
  apt: 
      name:
        - swig
        - python3-dev
        - python3-pip
        - postfix
      state: present
      update_cache: true

- name: Install python packages
  become: true
  pip: 
      executable: pip3 
      name: 
        - gkhtm
        - gkutils
        - numpy
        - ephem
        - confluent-kafka==2.1.1
        - mysql-connector-python
        - mocpy
        - docopt
        - scipy
        - skytag
        - dustmaps

- name: Install dustmaps
  become: true
  ansible.builtin.script:
    cmd: dustmap.py
    executable: python3

#- name: Create csvfiles directory
#  file:
#      path: "{{ ansible_env.HOME }}/csvfiles/"
#      state: directory
#      mode: 0777

# no longer required with current version of mariadb
#- name: Modify apparmor so MySQL can write
#  become: true
#  lineinfile:
#    dest: /etc/apparmor.d/usr.sbin.mysqld
#    line: "{{ ansible_env.HOME }}/csvfiles/** rwk,"
#    insertbefore: "}"
#    state: present
#
#- name: Restart apparmor
#  become: true
#  service:
#    name: apparmor
#    state: restarted
#    enabled: yes

- name: Creates directory for logs
  file:
    path: "{{ ansible_env.HOME }}/logs"
    state: directory

- name: Make sure the repo is up to date
  git: 
    repo: "{{ git_url }}"
    dest: "{{ ansible_env.HOME }}/{{ git_name }}"
    version: "{{ lasair_version }}"

- name: Setup Lasair database
  community.mysql.mysql_query:
    query:
      - CREATE DATABASE IF NOT EXISTS {{ mysql_db_name }};
      - USE {{ mysql_db_name }};
      - CREATE USER IF NOT EXISTS '{{ mysql_db_user }}'@'localhost' IDENTIFIED BY '{{ mysql_db_password }}';
      - GRANT ALL PRIVILEGES ON {{ mysql_db_name }}.* TO '{{ mysql_db_user }}'@'localhost';
      - GRANT FILE ON *.* TO '{{ mysql_db_user }}'@'localhost';
      - DROP FUNCTION IF EXISTS tainow;
      - CREATE FUNCTION tainow () RETURNS DOUBLE DETERMINISTIC RETURN (unix_timestamp(now())/86400 + 40587.0);
      - GRANT EXECUTE ON FUNCTION {{ mysql_db_name }}.tainow TO '{{ mysql_db_user }}'@'localhost';
    login_host: 127.0.0.1
    login_user: root
    login_password: "{{ mysql_root_password }}"
    single_transaction: yes

- name: Create object table
  shell:
      cmd: mysql --user='{{ mysql_db_user }}' --password='{{ mysql_db_password }}' '{{ mysql_db_name }}' < objects.sql
      chdir: "{{ ansible_env.HOME }}/{{ git_name }}/common/schema/lasair_sql"

- name: Create sherlock_classifications table
  shell:
      cmd: mysql --user='{{ mysql_db_user }}' --password='{{ mysql_db_password }}' '{{ mysql_db_name }}' < sherlock_classifications.sql
      chdir: "{{ ansible_env.HOME }}/{{ git_name }}/common/schema/lasair_sql"

- name: Create area_hits table
  shell:
      cmd: mysql --user='{{ mysql_db_user }}' --password='{{ mysql_db_password }}' '{{ mysql_db_name }}' < area_hits.sql
      chdir: "{{ ansible_env.HOME }}/{{ git_name }}/common/schema/lasair_sql"

- name: Create mma_area_hits table
  shell:
      cmd: mysql --user='{{ mysql_db_user }}' --password='{{ mysql_db_password }}' '{{ mysql_db_name }}' < mma_area_hits.sql
      chdir: "{{ ansible_env.HOME }}/{{ git_name }}/common/schema/lasair_sql"

- name: Create watchlist_hits table
  shell:
      cmd: mysql --user='{{ mysql_db_user }}' --password='{{ mysql_db_password }}' '{{ mysql_db_name }}' < watchlist_hits.sql
      chdir: "{{ ansible_env.HOME }}/{{ git_name }}/common/schema/lasair_sql"

- name: Create annotations table
  shell:
      cmd: mysql --user='{{ mysql_db_user }}' --password='{{ mysql_db_password }}' '{{ mysql_db_name }}' < annotations.sql
      chdir: "{{ ansible_env.HOME }}/{{ git_name }}/common/schema/lasair_sql"

