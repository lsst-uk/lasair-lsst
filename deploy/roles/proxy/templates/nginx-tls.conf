server {
        listen 80;
        return 302 https://{{ server_name }};
}

server {
        listen 443 ssl default_server;
        return 301 https://{{ server_name }};

        ssl_certificate /etc/letsencrypt/live/{{ server_name }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ server_name }}/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        {% if use_hsts %}
        add_header Strict-Transport-Security "max-age=2592000" always;
        {% endif %}
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff;
}

server {
        listen 443 ssl;
        root /var/www/html;
        index index.html index.htm;

        server_name {{ server_name }};

        client_max_body_size 100m;

        ssl_certificate /etc/letsencrypt/live/{{ server_name }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ server_name }}/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        {% if use_hsts %}
        add_header Strict-Transport-Security "max-age=2592000" always;
        {% endif %}

#####################################################################
# In order to direct traffic to the status page, uncomment the
# following line, then restart nginx. To stop redirecting, comment
# it out again, then restart nginx.
##        return 302 https://lasair-status.lsst.ac.uk;
#####################################################################

        location / {
                proxy_set_header Host $http_host;
                proxy_set_header X-Frame-Options SAMEORIGIN;
                proxy_set_header X-Content-Type-Options nosniff;
                proxy_pass http://localhost:8080/;

                if ($http_user_agent ~* "thesis-research-bot"){ return 403; }
                if ($http_user_agent ~* "fidget-spinner-bot"){ return 403; }
                if ($http_user_agent ~* "my-tiny-bot"){ return 403; }
                if ($http_user_agent ~* "MJ12bot"){ return 403; }
                if ($http_user_agent ~* "SemrushBot"){ return 403; }
                if ($http_user_agent ~* "PetalBot"){ return 403; }
                if ($http_user_agent ~* "opensiteexplorer"){ return 403; }
                if ($http_user_agent ~* "AhrefsBot"){ return 403; }
                if ($http_user_agent ~* "meta-externalagent"){ return 403; }
                if ($http_user_agent ~* "bingbot"){ return 403; }
                if ($http_user_agent ~* "Amazonbot"){ return 403; }
                if ($http_user_agent ~* "Claude-Web"){ return 403; }
                if ($http_user_agent ~* "anthropic-ai"){ return 403; }
                if ($http_user_agent ~* "Applebot"){ return 403; }
                if ($http_user_agent ~* "Bytespider"){ return 403; }
                if ($http_user_agent ~* "CCBot"){ return 403; }
                if ($http_user_agent ~* "ChatGPT"){ return 403; }
                if ($http_user_agent ~* "cohere-ai"){ return 403; }
                if ($http_user_agent ~* "Diffbot"){ return 403; }
                if ($http_user_agent ~* "FacebookBot"){ return 403; }
                if ($http_user_agent ~* "GoogleOther"){ return 403; }
                if ($http_user_agent ~* "Google-Extended"){ return 403; }
                if ($http_user_agent ~* "GPTBot"){ return 403; }
                if ($http_user_agent ~* "gptbot"){ return 403; }
                if ($http_user_agent ~* "ImagesiftBot"){ return 403; }
                if ($http_user_agent ~* "PerplexityBot"){ return 403; }
                if ($http_user_agent ~* "Omigili"){ return 403; }
        }

        location /robots.txt { }
}

