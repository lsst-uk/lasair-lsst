---
- hosts: localhost
  gather_facts: false
  tasks:
    - name: Get current git branch
      ansible.builtin.command: git branch --show-current
      register: git_tag
  tags: always

- hosts: all 
  gather_facts: true
  vars_files:
    - settings.yaml
  tasks:
    - name: Set Lasair version
      ansible.builtin.set_fact:
        lasair_version: "{{ hostvars['localhost']['git_tag'].stdout }}"
    - name: Get vault settings
      ansible.builtin.set_fact:
        settings: "{{ lookup('hashi_vault', 'secret='+vault.path+'/settings url='+vault.url)}}"
  tags:
    - always

- hosts: all:!localhost
  gather_facts: false
  vars_files:
    - settings.yaml
  roles:
    - lasair_instance
  tags: lasair_instance

- hosts: web
  gather_facts: false
  vars_files:
    - settings.yaml
    - exports.yaml
  vars:
    db_host: "{{ (groups['db'] + groups['cluster_control'] + [''])[0] }}"
    db_port: "{% if groups['db'] %}3306{% else %}9001{% endif %}"
    sherlock_svc_host: "{{ groups['sherlock'][0] }}"
    cassandra_head: "{{ groups['cassandranodes'] }}"
    powerapi_token: "placeholder"
  roles:
    - lasair_cephfs
    - webserver
  tags: web

- hosts: all
  gather_facts: true
  vars_files:
    - settings.yaml
  tasks:
    - name: Get API token
      ansible.builtin.uri:
        url: "http://{{ lasair_name }}-web:8080/api/auth-token/"
        method: POST
        body_format: json
        body:
          username: su
          password: "{{ settings.django_password }}"
      register: api_token_response
    - name: Set API token
      ansible.builtin.set_fact:
        powerapi_token: "{{ api_token_response.json.token }}"
  tags:
    - always

- hosts: svc
  gather_facts: false
  vars_files:
    - settings.yaml
    - exports.yaml
  vars:
    enable_letsencrypt: true
    db_host: "{{ (groups['db'] + groups['cluster_control'] + [''])[0] }}"
    db_port: "{% if groups['db'] %}3306{% else %}9001{% endif %}"
    replication_count: "{{ 1 if (groups['kafka']|length)<2 else 2 }}"
    # HTTP Sctrict Transport Security - should be true for prod, probably not for dev
    use_hsts: false 
  roles:
    - lasair_cephfs
    - lasair_service
    - prometheus
    - grafana
  tags: svc

- hosts: kafka
  gather_facts: false
  vars_files:
    - settings.yaml
  vars:
    kafka_secret: "{{ lookup('hashi_vault', 'secret='+vault.path+'/kafka url='+vault.url)}}"
    internal_only: true
    #source: public.alerts.ztf.uw.edu:9092
    source: usdf-alert-stream-dev.lsst.cloud:9094
    start_mirrormaker: false # don't start mirrormaker automatically by default
  roles:
    - kafka
    - mirrormaker # we currently run mirrormaker on the same hosts as kafka 
  tags: kafka

- hosts: kafka_pub
  gather_facts: false
  vars_files:
    - settings.yaml
  vars:
    internal_only: false
    dns_lookup: false # disable dns checks for testing
  roles:
    - kafka
  tags: kafka_pub

- hosts: ingest
  gather_facts: false
  vars_files:
    - settings.yaml
    - exports.yaml
  vars:
    db_host: "{{ (groups['db'] + groups['cluster_control'] + [''])[0] }}"
    db_port: "{% if groups['db'] %}3306{% else %}9001{% endif %}"
  roles:
    - lasair_cephfs
    - ingest
  tags: ingest
  
- hosts: sherlock
  gather_facts: false
  vars_files:
    - settings.yaml
    - exports.yaml
  vars:
    mysql_root_password: "{{ settings.local_db_root_password }}"
    db_host: "{{ (groups['db'] + groups['cluster_control'] + [''])[0] }}"
    db_port: "{% if groups['db'] %}3306{% else %}9001{% endif %}"
    datadir: /var/lib/mysql
    sherlock_catalogue_data_dir_lite: "/mnt/sherlock/data_lite"
    sherlock_catalogue_data_dir: "/mnt/sherlock/data"
    sherlock_sql_dir: "/mnt/sherlock/sql"
  roles:
    - lasair_cephfs
    - lasair_cephfs_sherlock
    - sherlock
  tags: sherlock
  
- hosts: filter
  gather_facts: false
  vars_files:
    - settings.yaml
    - exports.yaml
  vars:
    db_host: "{{ (groups['db'] + groups['cluster_control'] + [''])[0] }}"
    db_port: "{% if groups['db'] %}3306{% else %}9001{% endif %}"
    mysql_root_password: "{{ settings.local_db_root_password }}"
    datadir: /var/lib/mysql
  roles:
    - lasair_cephfs
    - gkansible.gkservercollection.mariadb
    - filter
  tags: filter

- hosts: proxy
  gather_facts: false
  vars_files:
    - settings.yaml
  vars:
    enable_letsencrypt: true
    # HTTP Sctrict Transport Security - should be true for prod, probably not for dev
    use_hsts: false 
  roles:
    - proxy
  tags: proxy

- hosts: cassandranodes,cutoutcass
  gather_facts: false
  become: yes
  tasks:
    - name: create filesystem for data
      community.general.filesystem:
        fstype: ext4
        dev: /dev/vdb
    - name: ensure data filesystem is mounted
      ansible.posix.mount:
        path: /var/lib/cassandra
        src: /dev/vdb
        fstype: ext4
        opts: nofail
        state: mounted
  tags: filesystem

- hosts: cassandranodes
  gather_facts: false
  vars_files:
    - settings.yaml
  vars:
    cassandra_cluster_name: "{{ lasair_name }}"
  roles:
    - gkansible.gkservercollection.cassandra4
  tags: cassandra

- hosts: cassandranodes
  vars_files:
    - settings.yaml
  vars:
    cassandra_cluster_name: "{{ lasair_name }}"
  roles:
    - gkansible.gkservercollection.cassandra_start_service
  serial: 1
  tags: cassandra

- hosts: parallel_ssh
  gather_facts: false
  vars_files:
    - settings.yaml
    - exports.yaml
  vars:
  roles:
    - role: lasair_cephfs
      when: instances.parallel_ssh.started
    - role: parallel_ssh
      when: instances.parallel_ssh.started
  tags: parallel_ssh

- hosts: cutoutcass
  gather_facts: false
  vars_files:
    - settings.yaml
  vars:
    cassandra_cluster_name: "{{ lasair_name }}_cutout"
  roles:
    - gkansible.gkservercollection.cassandra4
  tags: cutoutcass

- hosts: cutoutcass
  vars_files:
    - settings.yaml
  vars:
    cassandra_cluster_name: "{{ lasair_name }}_cutout"
  roles:
    - gkansible.gkservercollection.cassandra_start_service
  serial: 1
  tags: cutoutcass

# Hopefully temporary workaround for incompatibility between current version of Cassandra and Python 3.12 - 3/6/25
- hosts: cassandranodes,cutoutcass
  gather_facts: false
  become: yes
  tasks:
    - name: Remove default cqlsh
      ansible.builtin.file:
        path: /usr/bin/cqlsh
        state: absent
    - name: Install cqlsh snap
      community.general.snap:
        name:
          - cqlsh

- hosts: cassandranodes[0]
  vars_files:
    - settings.yaml
  vars:
    schema: 7_4_A
    cassandra_cluster_name: "{{ lasair_name }}"
  roles:
    - lasair_cassandra
  tags: cassandra

- hosts: cutoutcass[0]
  vars_files:
    - settings.yaml
  vars:
    schema: 7_4_A
    cassandra_cluster_name: "{{ lasair_name }}_cutout"
  roles:
    - lasair_cutoutcass
  tags: cutoutcass

